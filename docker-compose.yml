services:
  db:
    image: postgres:16-alpine
    container_name: todo_postgres
    environment:
      POSTGRES_DB: todo_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: todo_app
    environment:
      FLASK_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@db:5432/todo_dev
      SECRET_KEY: dev-secret-key-12345
    ports:
      - "9999:5000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    networks:
      - app_network
    command: flask run --host=0.0.0.0

  tester:
    image: curlimages/curl:latest
    depends_on:
      app:
        condition: service_started
    networks:
      - app_network
    command: >
      sh -c "
        sleep 10 &&
        echo 'Testing API...' &&
        curl -X GET http://app:5000/ &&
        echo '\nâœ… Test completed successfully.'
      "

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
